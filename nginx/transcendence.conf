# Upgrade helper for WebSockets
map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

# Redirect HTTP (host:8080) -> HTTPS (host:8443)
server {
  listen 80;
  server_name localhost 127.0.0.1;
  return 301 https://$host:8443$request_uri;
}

server {
  listen 0.0.0.0:443 ssl http2;
  listen 127.0.0.1:443 ssl http2;
  listen [::]:443 ssl http2;
  server_name localhost 127.0.0.1;

  ssl_certificate     /etc/nginx/certs/fullchain.pem;
  ssl_certificate_key /etc/nginx/certs/privkey.pem;

  # HSTS
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

  # Common proxy headers
  proxy_set_header Host              $host;
  proxy_set_header X-Real-IP         $remote_addr;
  proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;

  # ======================
  # Frontend (SPA)
  # ======================
  location / {
    proxy_http_version 1.1;
    proxy_pass http://frontend:80;
  }

  # ======================
  # API -> Backend (HTTPS upstream with verification)
  # ======================
  location /api/ {
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-Proto https;

    proxy_pass https://transcendence-backend:3000/api/;

    # Upstream TLS verification (trust your internal CA)
    proxy_ssl_server_name on;
    proxy_ssl_verify on;
    proxy_ssl_trusted_certificate /etc/nginx/certs/ca.crt;
  }

  # ======================
  # WebSocket -> Backend (HTTPS upstream + upgrade)
  # ======================
  location /ws {
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $host;

    proxy_http_version 1.1;
    proxy_read_timeout 600s;
    proxy_send_timeout 600s;
    proxy_buffering off;

    proxy_pass https://transcendence-backend:3000; 

    # Upstream TLS verification
    proxy_ssl_server_name on;
    proxy_ssl_verify on;
    proxy_ssl_trusted_certificate /etc/nginx/certs/ca.crt;
  }
}
