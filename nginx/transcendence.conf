# WebSocket Upgrade helper
map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

server {
 listen 80;
 server_name battlepong.co.uk www.battlepong.co.uk;
    
  # Redirect HTTP to HTTPS
  return 301 https://$server_name$request_uri;
}

server {
  # listen 0.0.0.0:443 ssl http2;
  # listen 127.0.0.1:443 ssl http2;
  # listen [::]:443 ssl http2;
  # server_name localhost 127.0.0.1;
  # server_name *.42london.com;
  listen 443 ssl http2;
  server_name battlepong.co.uk www.battlepong.co.uk;

  # ssl_certificate     /etc/nginx/ssl/certs/cert.crt;
  # ssl_certificate_key /etc/nginx/ssl/private/key.key;
  ssl_certificate     /etc/nginx/ssl/battlepong.co.uk.crt;
  ssl_certificate_key /etc/nginx/ssl/battlepong.co.uk.key;
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
  ssl_prefer_server_ciphers off;

  # Common proxy headers
  proxy_set_header Host              $host;
  proxy_set_header X-Real-IP         $remote_addr;
  proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;

  # --- Frontend (Vite dev server or your prod FE) ---
  location / {
    proxy_http_version 1.1;
    proxy_pass http://frontend:80;
  }

  # --- API (prefix kept as /api) ---
  # If your Fastify routes are registered under /api already, keep prefix.
  # IMPORTANT: use proxy_pass without trailing slash to preserve URI.
  location /api/ {
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-Proto https;
    proxy_http_version 1.1;
    proxy_pass http://backend:3000/api/;
  }

  # --- WebSocket ---
  location /ws {
    proxy_set_header Upgrade $http_upgrade;
    # proxy_set_header Connection "upgrade";
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $host;
    proxy_http_version 1.1;
    # proxy_read_timeout 600s;
    proxy_read_timeout 86400s;
    proxy_send_timeout 86400s;
    proxy_connect_timeout 10s;
    # proxy_pass http://backend:3000;
    proxy_pass http://backend:3000/ws;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_buffering off;
  }
}


  #  # Timeout configurations for WebSocket
  #   proxy_read_timeout 86400s;  # 24 hours
  #   proxy_send_timeout 86400s;  # 24 hours  
  #   proxy_connect_timeout 10s;
    
  #   # Disable buffering for WebSocket
  #   proxy_buffering off;
    
  #   # Keep alive settings
  #   proxy_set_header X-Real-IP $remote_addr;
  #   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  #   proxy_set_header X-Forwarded-Proto $scheme;

